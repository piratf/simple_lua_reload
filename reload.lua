---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- DateTime: 2020/2/8 17:20
--- 实现热更新的能力，要求对应的包按照规范实现

local reload = {}

-- 为加载函数准备的简易沙箱，要求只能运行这些安全的内容
local _SANDBOX = {
    print = function (...) print("RELOAD INIT: ", ...) end,
    require = require,
    pairs = pairs,
    next = next,
    ipairs = ipairs,
}

reload.reload_mod = function(mod_name)
    assert(type(mod_name) == "string")
    new_mod_name = mod_name .. '_new.lua'
    local f = loadfile(new_mod_name, "bt", _SANDBOX)
    print("loadfile: ", f)
    if not f then
        error("load file ", mod_name, " failed.")
    else
        local ret, mod = pcall(f)
        print("get call result: ", ret, mod)
        if not ret then
            error("pcall f failed.")
        else
            --通过测试，使用当前 _ENV 重新加载一次
            f = loadfile(new_mod_name, "bt", _ENV)
            ret, mod = pcall(f)
            local _LOADED = debug.getregistry()._LOADED
            local old_mod = _LOADED[mod_name]
            print("_LOADED[", mod_name, "]: ", _LOADED[mod_name])
            for k, v in pairs(mod) do
                print("k: ", k, " v: ", v)
                if type(v) == 'function' then
                    old_mod[k] = v
                end
            end
        end
    end
end

reload.reload = function(list)
    print("start reload.")
    for _, mod in ipairs(list) do
        reload.reload_mod(mod)
    end
end

return reload

